#version 430 core

layout (local_size_x = 1, local_size_y = 1) in;

// uniforms
uniform int numCellsX;
uniform int numCellsY;

// I/Os
layout (std430, binding = 0) buffer Prev {   // An SSBO
    uint PrevCellStates[];
};
layout (std430, binding = 1) buffer New {   // An SSBO
    uint NewCellStates[];
};


void main() {
    uint x = gl_GlobalInvocationID.x;   // Current work group x position
    uint y = gl_GlobalInvocationID.y;

    uint curState = PrevCellStates[y*numCellsX + x];

    // Compute sum of neighbour states
    int neighbourStatesSum = 0;
    for (int j = -1; j <= 1; j++) {
        for (int i = -1; i <= 1; i++) {
            if (x+i >=0 && x+i < numCellsX && y+j>=0 && y+j < numCellsY) { // Skip boundaries
                uint index = (int(y)+j)*int(numCellsX) + (int(x)+i);
                neighbourStatesSum += int(PrevCellStates[index]);
            }
        }
    }

    neighbourStatesSum -= int(curState);
    
    if (neighbourStatesSum == 3 || neighbourStatesSum + curState == 3)
        NewCellStates[y*numCellsX + x] = 1;
    else
        NewCellStates[y*numCellsX + x] = 0;
}